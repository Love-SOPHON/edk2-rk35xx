/** @file
*  Generic Timer Description Table (GTDT)
*
*  Copyrignt (c) 2020, Linaro Limited. All rights reserved.
*
*  SPDX-License-Identifier: BSD-2-Clause-Patent
**/

#include <Library/AcpiLib.h>
#include <Library/PcdLib.h>
#include <IndustryStandard/Acpi.h>

#include "AcpiHeader.h"

#define GTDT_GLOBAL_FLAGS_MAPPED      EFI_ACPI_5_0_GTDT_GLOBAL_FLAG_MEMORY_MAPPED_BLOCK_PRESENT
#define GTDT_GLOBAL_FLAGS_NOT_MAPPED  0
#define GTDT_GLOBAL_FLAGS_EDGE        EFI_ACPI_5_0_GTDT_GLOBAL_FLAG_INTERRUPT_MODE
#define GTDT_GLOBAL_FLAGS_LEVEL       0

#define GTDT_GLOBAL_FLAGS             (GTDT_GLOBAL_FLAGS_NOT_MAPPED | GTDT_GLOBAL_FLAGS_LEVEL)

#define GTDT_TIMER_EDGE_TRIGGERED   EFI_ACPI_6_4_GTDT_TIMER_FLAG_TIMER_INTERRUPT_MODE
#define GTDT_TIMER_LEVEL_TRIGGERED  0
#define GTDT_TIMER_ACTIVE_LOW       EFI_ACPI_6_4_GTDT_TIMER_FLAG_TIMER_INTERRUPT_POLARITY
#define GTDT_TIMER_ACTIVE_HIGH      0
#define GTDT_TIMER_ALWAYS_ON        EFI_ACPI_6_4_GTDT_TIMER_FLAG_ALWAYS_ON_CAPABILITY

#define GTDT_GTIMER_FLAGS           (GTDT_TIMER_ACTIVE_HIGH | GTDT_TIMER_LEVEL_TRIGGERED)

  #pragma pack (1)

  typedef struct {
    EFI_ACPI_6_4_GENERIC_TIMER_DESCRIPTION_TABLE          Gtdt;
  } GENERIC_TIMER_DESCRIPTION_TABLES;

  #pragma pack ()

  GENERIC_TIMER_DESCRIPTION_TABLES Gtdt = {
    {
      ACPI_HEADER(
        EFI_ACPI_6_4_GENERIC_TIMER_DESCRIPTION_TABLE_SIGNATURE,
        GENERIC_TIMER_DESCRIPTION_TABLES,
        EFI_ACPI_6_4_GENERIC_TIMER_DESCRIPTION_TABLE_REVISION
      ),
      0xFFFFFFFFFFFFFFFF,                           // UINT64  PhysicalAddress
      0,                                            // UINT32  Reserved
      FixedPcdGet32 (PcdArmArchTimerSecIntrNum),    // UINT32  SecurePL1TimerGSIV
      GTDT_GTIMER_FLAGS,                            // UINT32  SecurePL1TimerFlags
      FixedPcdGet32 (PcdArmArchTimerIntrNum),       // UINT32  NonSecurePL1TimerGSIV
      GTDT_GTIMER_FLAGS,                            // UINT32  NonSecurePL1TimerFlags
      FixedPcdGet32 (PcdArmArchTimerVirtIntrNum),   // UINT32  VirtualTimerGSIV
      GTDT_GTIMER_FLAGS,                            // UINT32  VirtualTimerFlags
      FixedPcdGet32 (PcdArmArchTimerHypIntrNum),    // UINT32  NonSecurePL2TimerGSIV
      GTDT_GTIMER_FLAGS,                            // UINT32  NonSecurePL2TimerFlags
      0xFFFFFFFFFFFFFFFF,                           // UINT64  CntReadBasePhysicalAddress
      0,                                            // UINT32  PlatformTimerCount
      0,                                            // UINT32  PlatformTimerOffset
      0,                                            // UINT32  VirtualPL2TimerGSIV
      0                                             // UINT32  VirtualPL2TimerFlags
    }
  };

// Reference the table being generated to prevent the optimizer from removing the
// data structure from the executable
VOID* CONST ReferenceAcpiTable = &Gtdt;
